.btn {
  position: relative;
  z-index: 2;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  cursor: pointer;
  outline: none;
  width: 100%;
}
.btn:hover,
.btn:focus {
  outline: none;
}
.img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  -o-object-position: center;
  object-position: center;
}
.img__wrap {
  position: relative;
  overflow: hidden;
}
.input {
  -webkit-transition: 0.3s;
  transition: 0.3s;
  white-space: nowrap;
  outline: none;
  overflow: hidden;
  font-size: 17px;
  border: none;
  width: 100%;
  height: 40px;
  border-radius: 0;
  border-bottom: 1px solid;
  background-color: transparent;
  padding: 2px 25px 2px 1px;
  -webkit-appearance: none;
}
.input::-webkit-search-cancel-button {
  position: relative;
  left: 10px;
  cursor: pointer;
  -webkit-transition: 0.2s;
  transition: 0.2s;
}
.input::-webkit-search-cancel-button:hover,
.input::-webkit-search-cancel-button:focus {
  -webkit-transform: scale(1.1);
  transform: scale(1.1);
}
.link {
  position: relative;
  -webkit-transition: color 0.2s;
  transition: color 0.2s;
  line-height: 1.2;
  cursor: pointer;
}
.link:hover,
.link:focus {
  outline: none;
}
.link-abs {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.menu {
  position: fixed;
  z-index: 10;
  left: 0;
  top: 0;
  width: 320px;
  min-height: 100vh;
  max-height: 100%;
  overflow-y: auto;
  -webkit-transform: translateX(-100%);
  transform: translateX(-100%);
  -webkit-transition: 0.3s;
  transition: 0.3s;
}
.menu.is-active {
  -webkit-transform: translateX(0);
  transform: translateX(0);
}
.menu__close-btn {
  position: absolute;
  top: 29px;
  right: 29px;
  cursor: pointer;
  width: 32px;
  height: 32px;
}
.menu__close-btn-line {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #fff;
  width: 32px;
  height: 3px;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}
.menu__close-btn-line:first-child {
  -webkit-transform: translate(-50%, -50%) rotate(45deg);
  transform: translate(-50%, -50%) rotate(45deg);
}
.menu__close-btn-line:last-child {
  -webkit-transform: translate(-50%, -50%) rotate(-45deg);
  transform: translate(-50%, -50%) rotate(-45deg);
}
.menu__wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 48px 30px;
  min-height: 100vh;
}
@media all and (max-width: 700px) {
  .menu__wrap {
    padding: 32px 30px;
  }
  .menu__close-btn {
    top: 26px;
    right: 19px;
  }
}
.page {
  position: relative;
  min-width: 320px;
  font-family: Montserrat, sans-serif;
  font-size: 17px;
  line-height: 1.2;
  overflow-x: hidden;
  color: #000;
}
.page__blackout {
  position: fixed;
  cursor: pointer;
  top: 0;
  right: 0;
  z-index: -1;
  width: 0;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
}
.page__blackout.is-active {
  width: 100%;
  z-index: 3;
  opacity: 1;
}
.container {
  max-width: 1220px;
  padding: 0 40px 0 40px;
  margin: 0 auto;
}
@media all and (max-width: 1050px) {
  .container {
    padding: 0 30px;
  }
}
@media all and (max-width: 550px) {
  .container {
    padding: 0 16px;
  }
}
.title {
  line-height: 1.2;
}
.title--l1 {
  font-weight: 700;
  font-size: 48px;
}
.title--l2 {
  font-size: 35px;
  font-weight: 900;
  text-transform: uppercase;
}
.title--l3 {
  position: relative;
  text-transform: uppercase;
  font-size: 18px;
  font-weight: 700;
}
.title--l3:before {
  content: '';
  position: absolute;
  z-index: 1;
  top: -33px;
  left: 50%;
  -webkit-transform: translateX(-50%) rotate(-7deg);
  transform: translateX(-50%) rotate(-7deg);
  width: 200px;
  max-width: 200px;
  height: 2px;
}
@media all and (max-width: 1023px) {
  .title--l1 {
    font-size: 32px;
  }
}
@media all and (max-width: 550px) {
  .title--l1 {
    font-size: 27px;
  }
  .title--l3:before {
    left: 77%;
  }
}
@media all and (max-width: 400px) {
  .title--l1 {
    font-size: 26px;
  }
}
@font-face {
  font-family: 'Montserrat';
  src: local('Montserrat-Regular'), url('../fonts/Montserrat-Regular.woff') format('woff');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: 'Montserrat';
  src: local('Montserrat-SemiBold'), url('../fonts/Montserrat-SemiBold.woff') format('woff');
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: 'Montserrat';
  src: local('Montserrat-Bold'), url('../fonts/Montserrat-Bold.woff') format('woff');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
.bold {
  font-weight: 700;
}
.normal {
  font-weight: 400;
}
.nowrap {
  white-space: nowrap;
}
.hidden {
  display: none!important;
}
.scroll-stop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  clip: rect(0 0 0 0);
  overflow: hidden;
}
/*.stop-body-scroll{
  overflow: hidden;
  position: relative;
  height: 100%;
}*/
/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}
/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
}
/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
  text-decoration: none;
}
/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bold;
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
address {
  font-style: normal;
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
  max-width: 100%;
}
/* Forms
   ========================================================================== */
button {
  background-color: transparent;
  border: none;
}
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.2;
  /* 1 */
  margin: 0;
  /* 2 */
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  padding: 0;
  -webkit-appearance: button;
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}
/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}
/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}
/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}
/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}
/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
}
ul,
ol {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
